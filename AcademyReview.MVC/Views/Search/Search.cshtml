@model AcademyReview.Models.SearchModels.SearchParameters

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>SearchParameters</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.TypeId)
        <div class="col-md-10">
            @Html.DropDownList("SearchParameters",
                                new SelectList(Enum.GetValues(typeof(Type))),
                                "Search By:",
                                new { @class = "form-control" })

        </div>
        @Html.LabelFor(model => model.SearchInput, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.SearchInput, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.SearchInput, "", new { @class = "text-danger" })
        </div>
    </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    | @Html.ActionLink("Back to List", "Index") |
</div>
